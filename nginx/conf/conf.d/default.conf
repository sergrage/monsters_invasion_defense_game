    # Первый серверный блок для обработки HTTP запросов
    server {
        listen 80;
        listen [::]:80;

        server_name defense-game-crew.ya-praktikum.tech;
        # server_name your-local-domain.test;

        # Обработка запросов для валидации домена при получении сертификата Let's Encrypt
        location /.well-known/acme-challenge/ {
            # Указываем директорию, где будут храниться файлы валидации
            root /var/www/certbot;
        }

        # Перенаправление всех остальных запросов на HTTPS
        location / {
            # Возвращаем код 301 (постоянное перенаправление) на HTTPS
            return 301 https://$host$request_uri;
        }
    }

    # Второй серверный блок для обработки HTTPS запросов
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2  on;

        server_name defense-game-crew.ya-praktikum.tech;
        # server_name your-local-domain.test;

        # Указываем пути к SSL сертификатам и ключам
        # ssl_certificate /etc/nginx/localkeys/your-local-domain.test.pem;
        # ssl_certificate_key /etc/nginx/localkeys/your-local-domain.test-key.pem;
        ssl_certificate /etc/letsencrypt/live/defense-game-crew.ya-praktikum.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/defense-game-crew.ya-praktikum.tech/privkey.pem;

        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        # ssl_early_data on;

        # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/nginx/dhparam

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;

        add_header Strict-Transport-Security "max-age=15768000";

        ssl_stapling on;
        ssl_stapling_verify on;

        add_header  X-Content-Type-Options "nosniff";
        add_header  X-XSS-Protection "1; mode=block";



        location /ping {
            add_header content-type "application/json";
            return 200 '{"status": "ok", "message": "pong"}';
        }

        location / {
            proxy_pass http://client;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass http://server:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

